{"ast":null,"code":"var _jsxFileName = \"/Users/ramprasathmeganathan/Documents/AdvancedWeb/WebAssignment2/webassignment2/src/components/carousel.js\";\nimport React from \"react\";\nimport Carousel from \"react-multi-carousel\";\nimport '../App.css';\nconst responsive = {\n  desktop: {\n    breakpoint: {\n      max: 3000,\n      min: 1024\n    },\n    items: 1,\n    paritialVisibilityGutter: 60\n  },\n  tablet: {\n    breakpoint: {\n      max: 1024,\n      min: 464\n    },\n    items: 1,\n    paritialVisibilityGutter: 40\n  },\n  mobile: {\n    breakpoint: {\n      max: 464,\n      min: 0\n    },\n    items: 1,\n    paritialVisibilityGutter: 40\n  }\n};\nconst colors = [\"red\", \"green\", \"blue\", \"orange\"]; // Because this is an inframe, so the SSR mode doesn't not do well here.\n// It will work on real devices.\n\nconst carousel = ({\n  deviceType\n}) => {\n  return /*#__PURE__*/React.createElement(Carousel, {\n    partialVisbile: true,\n    deviceType: deviceType,\n    itemClass: \"image-item\",\n    responsive: responsive,\n    removeArrowOnDeviceType: [\"tablet\", \"mobile\"],\n    showDots: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, colors.map(color => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        background: color,\n        width: 300,\n        height: 300\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }, \"hello\");\n  }));\n};\n\nexport default carousel;","map":{"version":3,"sources":["/Users/ramprasathmeganathan/Documents/AdvancedWeb/WebAssignment2/webassignment2/src/components/carousel.js"],"names":["React","Carousel","responsive","desktop","breakpoint","max","min","items","paritialVisibilityGutter","tablet","mobile","colors","carousel","deviceType","map","color","background","width","height"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAO,YAAP;AAEA,MAAMC,UAAU,GAAG;AACjBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,UAAU,EAAE;AAAEC,MAAAA,GAAG,EAAE,IAAP;AAAaC,MAAAA,GAAG,EAAE;AAAlB,KADL;AAEPC,IAAAA,KAAK,EAAE,CAFA;AAGPC,IAAAA,wBAAwB,EAAE;AAHnB,GADQ;AAMjBC,EAAAA,MAAM,EAAE;AACNL,IAAAA,UAAU,EAAE;AAAEC,MAAAA,GAAG,EAAE,IAAP;AAAaC,MAAAA,GAAG,EAAE;AAAlB,KADN;AAENC,IAAAA,KAAK,EAAE,CAFD;AAGNC,IAAAA,wBAAwB,EAAE;AAHpB,GANS;AAWjBE,EAAAA,MAAM,EAAE;AACNN,IAAAA,UAAU,EAAE;AAAEC,MAAAA,GAAG,EAAE,GAAP;AAAYC,MAAAA,GAAG,EAAE;AAAjB,KADN;AAENC,IAAAA,KAAK,EAAE,CAFD;AAGNC,IAAAA,wBAAwB,EAAE;AAHpB;AAXS,CAAnB;AAiBA,MAAMG,MAAM,GAAG,CAAC,KAAD,EAAQ,OAAR,EAAiB,MAAjB,EAAyB,QAAzB,CAAf,C,CAEA;AACA;;AACA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AACnC,sBACE,oBAAC,QAAD;AACE,IAAA,cAAc,MADhB;AAEE,IAAA,UAAU,EAAEA,UAFd;AAGE,IAAA,SAAS,EAAC,YAHZ;AAIE,IAAA,UAAU,EAAEX,UAJd;AAKE,IAAA,uBAAuB,EAAE,CAAC,QAAD,EAAW,QAAX,CAL3B;AAME,IAAA,QAAQ,EAAE,IANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGS,MAAM,CAACG,GAAP,CAAWC,KAAK,IAAI;AACnB,wBACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAED,KAAd;AAAqBE,QAAAA,KAAK,EAAE,GAA5B;AAAiCC,QAAAA,MAAM,EAAE;AAAzC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF;AAKD,GANA,CARH,CADF;AAkBD,CAnBD;;AAqBA,eAAeN,QAAf","sourcesContent":["import React from \"react\";\nimport Carousel from \"react-multi-carousel\";\nimport '../App.css';\n\nconst responsive = {\n  desktop: {\n    breakpoint: { max: 3000, min: 1024 },\n    items: 1,\n    paritialVisibilityGutter: 60\n  },\n  tablet: {\n    breakpoint: { max: 1024, min: 464 },\n    items: 1,\n    paritialVisibilityGutter: 40\n  },\n  mobile: {\n    breakpoint: { max: 464, min: 0 },\n    items: 1,\n    paritialVisibilityGutter: 40\n  }\n};\nconst colors = [\"red\", \"green\", \"blue\", \"orange\"];\n\n// Because this is an inframe, so the SSR mode doesn't not do well here.\n// It will work on real devices.\nconst carousel = ({ deviceType }) => {\n  return (\n    <Carousel\n      partialVisbile\n      deviceType={deviceType}\n      itemClass=\"image-item\"\n      responsive={responsive}\n      removeArrowOnDeviceType={[\"tablet\", \"mobile\"]}\n      showDots={true}\n    >\n      {colors.map(color => {\n        return (\n          <div style={{ background: color, width: 300, height: 300 }}>\n            hello\n          </div>\n        );\n      })}\n    </Carousel>\n  );\n};\n\nexport default carousel;\n"]},"metadata":{},"sourceType":"module"}